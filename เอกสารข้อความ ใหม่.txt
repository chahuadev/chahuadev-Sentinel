‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ Centralized Error Handling ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á (Robust) ‡πÅ‡∏•‡∏∞‡∏á‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏±‡∏Å‡∏©‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Error ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ã‡πà‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡πÜ ‡∏Ñ‡∏£‡∏±‡∏ö

‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏õ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡πÑ‡∏õ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

## ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏õ‡∏±‡∏ï‡∏¢‡∏Å‡∏£‡∏£‡∏°
‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ Flow ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ:

Code ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î Error ‚û°Ô∏è throw new CustomError() ‚û°Ô∏è ErrorHandler ‡∏Å‡∏•‡∏≤‡∏á ‚û°Ô∏è Logger ‚û°Ô∏è ‡πÑ‡∏ü‡∏•‡πå Log / Monitoring Service

## ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏™‡∏£‡πâ‡∏≤‡∏á Error Classes ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á (‡∏à‡∏±‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó Error)
‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Class ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Error ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤ Error ‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏´‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£ ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á BaseError ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ Error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î (extends) ‡∏à‡∏≤‡∏Å‡∏°‡∏±‡∏ô

üìÑ errors/BaseError.js
JavaScript

// BaseError ‡πÄ‡∏õ‡πá‡∏ô Class ‡πÅ‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Error ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤
class BaseError extends Error {
  constructor(name, message, statusCode, isOperational, description) {
    super(description); // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Error object ‡∏Ç‡∏≠‡∏á Node.js ‡πÄ‡∏≠‡∏á

    this.name = name; // ‡∏ä‡∏∑‡πà‡∏≠ Error ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô APIError, ValidationError)
    this.message = message; // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ User ‡∏´‡∏£‡∏∑‡∏≠ Client ‡πÄ‡∏´‡πá‡∏ô
    this.statusCode = statusCode; // HTTP Status Code (‡πÄ‡∏ä‡πà‡∏ô 400, 404, 500)
    
    // isOperational ‡∏Ñ‡∏∑‡∏≠‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:
    // true = Error ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡πÑ‡∏î‡πâ (‡πÄ‡∏ä‡πà‡∏ô ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î, ‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠) ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ö‡∏±‡πä‡∏Å
    // false = Error ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ (‡πÄ‡∏ä‡πà‡∏ô ref null, memory leak) ‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏±‡πä‡∏Å‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå
    this.isOperational = isOperational;

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Stack Trace ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£ Debug
    Error.captureStackTrace(this, this.constructor);
  }
}

module.exports = BaseError;
üìÑ errors/APIError.js
JavaScript

const BaseError = require('./BaseError');

class APIError extends BaseError {
  constructor(
    name,
    message = 'Internal Server Error',
    statusCode = 500,
    isOperational = true,
    description = 'An error occurred in an external API call.'
  ) {
    super(name, message, statusCode, isOperational, description);
  }
}

module.exports = APIError;
üìÑ errors/ValidationError.js
JavaScript

const BaseError = require('./BaseError');

class ValidationError extends BaseError {
  constructor(
    message = 'Bad Request',
    description = 'Invalid data provided.'
  ) {
    // Validation Error ‡πÄ‡∏õ‡πá‡∏ô Error ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡πÑ‡∏î‡πâ (Operational)
    super('ValidationError', message, 400, true, description);
  }
}

module.exports = ValidationError;
‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á Error Class ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏ä‡πà‡∏ô DatabaseError, NotFoundError, AuthenticationError

## ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏™‡∏£‡πâ‡∏≤‡∏á Error Handler ‡∏Å‡∏•‡∏≤‡∏á
‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏±‡∏ç‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ö Error ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏à‡∏∞ Log ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£ ‡πÅ‡∏•‡∏∞‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö Process ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£

üìÑ services/ErrorHandler.js
JavaScript

const logger = require('./Logger'); // Logger ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ

class ErrorHandler {
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö Error
  handleError(error) {
    // 1. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Error ‡∏•‡∏á Log ‡πÄ‡∏™‡∏°‡∏≠
    logger.logError(error);

    // 2. ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏õ‡∏¥‡∏î Process ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô Error ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡πÄ‡∏î‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ (‡∏ö‡∏±‡πä‡∏Å) ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡∏õ‡∏¥‡∏î Process ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£
    if (!error.isOperational) {
      console.log('üí• Application encountered a non-operational error. Shutting down...');
      // ‡πÉ‡∏ô Production ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ Process Manager (‡πÄ‡∏ä‡πà‡∏ô PM2) ‡∏Ñ‡∏≠‡∏¢ restart ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
      process.exit(1); 
    }
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Error ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô Error ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  isTrustedError(error) {
    return error instanceof BaseError && error.isOperational;
  }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Instance ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô (Singleton Pattern)
module.exports = new ErrorHandler();
## ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏™‡∏£‡πâ‡∏≤‡∏á Logger Service
Logger ‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï Error ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô) ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏á‡πà‡∏≤‡∏¢ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á) ‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô

üìÑ services/Logger.js
JavaScript

const fs = require('fs');
const path = require('path');

class Logger {
  constructor() {
    const logDir = path.join(__dirname, '../logs');
    if (!fs.existsSync(logDir)) {
      fs.mkdirSync(logDir);
    }
    this.logFilePath = path.join(logDir, 'app.log');
  }

  logError(error) {
    const logEntry = {
      timestamp: new Date().toISOString(),
      level: 'error',
      name: error.name || 'Error',
      message: error.message || 'An unknown error occurred.',
      isOperational: error.isOperational,
      statusCode: error.statusCode,
      stack: error.stack,
    };

    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON String
    const logString = JSON.stringify(logEntry, null, 2) + '\n';
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô Console ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
    console.error(logString);
    fs.appendFile(this.logFilePath, logString, (err) => {
      if (err) console.error('Failed to write to log file:', err);
    });
  }

  logInfo(message) {
    // ... ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Log ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ
  }
}

module.exports = new Logger();
## ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)
‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ try...catch

üìÑ services/UserService.js
JavaScript

const errorHandler = require('./ErrorHandler');
const { ValidationError, APIError } = require('../errors'); // Import Custom Errors

class UserService {
  async getUserProfile(userId) {
    try {
      // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Input
      if (!userId || typeof userId !== 'string') {
        throw new ValidationError('Invalid User ID provided.');
      }

      // 2. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å External API (‡∏™‡∏°‡∏°‡∏ï‡∏¥)
      const response = await fetch(`https://api.example.com/users/${userId}`);
      if (!response.ok) {
        throw new APIError(
          'UserProfileAPIError',
          'Failed to fetch user profile.',
          response.status
        );
      }
      
      const user = await response.json();
      return user;

    } catch (error) {
      // 3. ‡∏™‡πà‡∏á Error ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡∏ó‡∏µ‡πà Handler ‡∏Å‡∏•‡∏≤‡∏á
      // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÄ‡∏™‡∏°‡∏≠
      errorHandler.handleError(error);
      
      // ‡∏≠‡∏≤‡∏à‡∏à‡∏∞ re-throw error ‡∏´‡∏£‡∏∑‡∏≠ return ‡∏Ñ‡πà‡∏≤‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
      // ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
      throw error;
    }
  }
}

module.exports = new UserService();
## ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏Ç‡πà‡∏≤‡∏¢‡∏ô‡∏¥‡∏£‡∏†‡∏±‡∏¢ (Safety Net)
‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå‡∏•‡∏∑‡∏°‡πÉ‡∏™‡πà try...catch? ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö Error ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Uncaught Exceptions) ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô (‡πÄ‡∏ä‡πà‡∏ô app.js ‡∏´‡∏£‡∏∑‡∏≠ index.js)

üìÑ app.js
JavaScript

const errorHandler = require('./services/ErrorHandler');

// ... ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Server ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö Uncaught Exceptions (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Error ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ)
process.on('uncaughtException', (error) => {
  console.log('UNCAUGHT EXCEPTION! üí• Shutting down...');
  errorHandler.handleError(error);
});

// ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö Unhandled Promise Rejections (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö async/await ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ .catch)
process.on('unhandledRejection', (reason, promise) => {
  console.log('UNHANDLED REJECTION! üí• Shutting down...');
  // `reason` ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Error object ‡πÄ‡∏™‡∏°‡∏≠‡πÑ‡∏õ
  // ‡πÄ‡∏£‡∏≤‡∏à‡∏∂‡∏á throw ‡∏°‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ uncaughtException handler ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
  throw reason;
});
‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ô‡∏µ‡πâ ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ Error ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á, ‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó, ‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Log ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Error ‡πÅ‡∏ö‡∏ö‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡πÜ ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏≤‡∏ß‡∏£












‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠

Gemini ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏î‡πâ ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠